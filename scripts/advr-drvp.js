// Generated by CoffeeScript 1.7.0
(function() {
  var flowrate, gotoDepthsReport, table;

  table = null;

  flowrate = 0;

  gotoDepthsReport = function() {
    var prev_page;
    if ($('html').attr('lang') === "fr") {
      prev_page = "ad-pd-fra.html";
    } else {
      prev_page = "ad-pd-eng.html";
    }
    return document.location = prev_page + ("?date=" + ($('#date').val()) + "&") + ("chainage=" + ($('#chainage').val()) + "&") + ("flowRate=" + ($('#flowRate').val()) + "&") + ("flowType=" + ($('#flowType').val()) + "&") + ("sounding=" + ($('#sounding').val()) + "&") + ("width=" + ($('#width').val()) + "&") + ("lane=" + ($('#lane').val()) + "&") + ("period=" + ($('#period').val()));
  };

  $(function() {
    var flowType_txt, limit_text;
    $("#print_daily_depths").click(function() {
      return window.print();
    });
    $(".depths").click(gotoDepthsReport);
    $("#date").val(querystring('date'));
    $("#chainage").val(querystring('chainage'));
    $("#flowRate").val(querystring('flowRate'));
    $("#flowType").val(querystring('flowType'));
    $("#sounding").val(querystring('sounding'));
    $("#width").val(querystring('width'));
    $("#lane").val(querystring('lane'));
    $("#period").val(querystring('period'));
    $("#period").val(parseInt($("#period").val().substring(0, 2)) / 2 + 1);
    $("#date-display").text(moment($("#date").val()).format("MMMM D, YYYY"));
    $("#static-discharge").text($("#flowRate").val());
    $("#static-discharge-eval").text($("#flowType").val());
    if ($('html').attr('lang') === 'fr') {
      flowType_txt = (function() {
        switch ($("#flowType").val()) {
          case 'Predicted':
            return "prévu";
          case 'Actual':
            return "réel";
          case 'UserDefined':
            return "défini par l'utilisateur";
          case 'Selected':
            return "choisi";
        }
      })();
      $("#static-discharge-eval").text(flowType_txt);
    }
    $("#static-time").text(querystring('period'));
    $(".static-chainage").text($("#chainage").val());
    $("#static-width").text($("#width").val());
    limit_text = (function() {
      switch (false) {
        case $("#lane").val() !== '0':
          if(window.location.href.indexOf("eng") > -1) {
            return 'Inner Channel Limit';
          } else {
            return 'Limite intérieure';
          }
          break;
        case $("#lane").val() !== '1':
          if(window.location.href.indexOf("eng") > -1) {
            return 'Outer Channel Limit';
          } else {
            return 'Limite extérieure';
          }
          break;
        default:
          return '';
      }
    })();
    $('#static-limit').text(limit_text);
    return $.getJSON(("/api/depths/verify?date=" + ($('#date').val()) + "&") + ("chainage=" + ($('#chainage').val()) + "&") + ("flowRate=" + ($('#flowRate').val()) + "&") + "flowType=1&" + ("sounding=" + ($('#sounding').val()) + "&") + ("width=" + ($('#width').val()) + "&") + ("lane=" + (parseInt($("#lane").val()) + 1) + "&") + ("period=" + ($('#period').val())), function(data) {
      var least_depth, points;
      table || (table = $('#verify').dataTable({
        bPaginate: false,
        bInfo: false,
        bFilter: false,
        bAutoWidth: false,
        aaSorting: []
      }));
      table.fnClearTable();
      $('#verify tbody tr').remove();
      points = new Array();
      least_depth = 10000;
      $.each(data.items, function() {
        var depth, fixed_depth;
        fixed_depth = this.depth.toFixed(1);
        if (this.depth <= least_depth) {
          least_depth = parseFloat(fixed_depth);
          $('#verify td').find('.low_depth').removeClass('low_depth');
          depth = "<span class=\"low_depth\">" + fixed_depth + "</span>";
        } else {
          depth = fixed_depth;
        }
        return table.fnAddData([this.location, this.designGrade, this.sounding, this.width, this.percent, this.tidalAid, depth]);
      });
      return $('#verify td').find('.low_depth').closest('tr').addClass('least-depth');
    });
  });

}).call(this);
